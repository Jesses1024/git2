<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置注解驱动，代替推荐使用的映射器、适配器、json转换器 -->
    <mvc:annotation-driven/>

    <!-- 开启注解扫描 -->
    <context:component-scan base-package="cn.itcast.usermanager.controller"></context:component-scan>

    <!--处理静态资源拦截问题，原因：在web.xml中DispatcherServlet的入口配置了“/”-->
    <mvc:default-servlet-handler/>

    <!-- 配置视图解析器 -->
    <!-- Example: prefix="/WEB-INF/jsp/", suffix=".jsp", viewname="test" -> "/WEB-INF/jsp/test.jsp"  -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--将自定义视图注册到springmvc的容器，并指定视图名称。-->
    <!--
        因为视图解析器是InternalResourceResolver，依然会被解析成jsp视图。
        所以还需要定义一个新的视图解析器。
    -->
    <bean id="userExcelView" class="cn.itcast.usermanager.view.UserExcelView"/>

    <!--自定义一个视图解析器，BeanNameViewResolver，把bean的name作为视图解析器的依据-->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <!--
            order为1，配置视图解析器的顺序。先执行自定义的视图解析器。
            内部资源的视图解析器，不管有没有相应的视图，总有返回值；
            其他的视图解析器，只有视图存在的情况下，才有返回值。
            所以默认顺序下，执行到内部资源视图解析器时，
            直接返回userExcel.jsp视图，不再去找其他视图解析器进行解析。
         -->
        <property name="order" value="1"></property>
    </bean>
</beans>